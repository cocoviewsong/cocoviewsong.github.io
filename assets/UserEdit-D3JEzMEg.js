import{e as N,d as B,f as T,g as k,a as v,n as q,t as V,p as x,h as A,i as C,r as K,o as M,j as U,w as y,k as j,b as I,l as O}from"./index-CRQ7E241.js";import{B as R}from"./index-Kx9tEJy0.js";import"./index-CbsGAf1m.js";import{F as $}from"./index-BgKKs6wc.js";const[D,W]=N("form"),Y={colon:Boolean,disabled:Boolean,readonly:Boolean,required:[Boolean,String],showError:Boolean,labelWidth:q,labelAlign:String,inputAlign:String,scrollToError:Boolean,scrollToErrorPosition:String,validateFirst:Boolean,submitOnEnter:V,showErrorMessage:V,errorMessageAlign:String,validateTrigger:{type:[String,Array],default:"onBlur"}};var z=B({name:D,props:Y,emits:["submit","failed"],setup(u,{emit:i,slots:r}){const{children:l,linkChildren:d}=T(A),s=e=>e?l.filter(t=>e.includes(t.name)):l,m=e=>new Promise((t,o)=>{const n=[];s(e).reduce((w,F)=>w.then(()=>{if(!n.length)return F.validate().then(b=>{b&&n.push(b)})}),Promise.resolve()).then(()=>{n.length?o(n):t()})}),f=e=>new Promise((t,o)=>{const n=s(e);Promise.all(n.map(a=>a.validate())).then(a=>{a=a.filter(Boolean),a.length?o(a):t()})}),p=e=>{const t=l.find(o=>o.name===e);return t?new Promise((o,n)=>{t.validate().then(a=>{a?n(a):o()})}):Promise.reject()},c=e=>typeof e=="string"?p(e):u.validateFirst?m(e):f(e),S=e=>{typeof e=="string"&&(e=[e]),s(e).forEach(o=>{o.resetValidation()})},E=()=>l.reduce((e,t)=>(e[t.name]=t.getValidationStatus(),e),{}),g=(e,t)=>{l.some(o=>o.name===e?(o.$el.scrollIntoView(t),!0):!1)},h=()=>l.reduce((e,t)=>(t.name!==void 0&&(e[t.name]=t.formValue.value),e),{}),_=()=>{const e=h();c().then(()=>i("submit",e)).catch(t=>{i("failed",{values:e,errors:t});const{scrollToError:o,scrollToErrorPosition:n}=u;o&&t[0].name&&g(t[0].name,n?{block:n}:void 0)})},P=e=>{x(e),_()};return d({props:u}),k({submit:_,validate:c,getValues:h,scrollToField:g,resetValidation:S,getValidationStatus:E}),()=>{var e;return v("form",{class:W(),onSubmit:P},[(e=r.default)==null?void 0:e.call(r)])}}});const G=C(z),H={style:{margin:"16px"}},Z=B({__name:"UserEdit",setup(u){const i=j(),r=K({editKey:i.query.editKey,editName:i.query.editName,currentValue:i.query.currentValue}),l=d=>{console.log(d)};return(d,s)=>{const m=$,f=R,p=G;return M(),U(p,{onSubmit:l},{default:y(()=>[v(m,{modelValue:r.value.currentValue,"onUpdate:modelValue":s[0]||(s[0]=c=>r.value.currentValue=c),name:r.value.editKey,label:r.value.editName,placeholder:`请输入${r.value.editName}`,rules:[{required:!0,message:"请填写用户名"}]},null,8,["modelValue","name","label","placeholder"]),I("div",H,[v(f,{round:"",block:"",type:"primary","native-type":"submit"},{default:y(()=>s[1]||(s[1]=[O(" 确认修改 ")])),_:1})])]),_:1})}}});export{Z as default};
